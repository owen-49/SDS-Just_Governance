"""init schema

Revision ID: 8b0f2ef2bda9
Revises: 
Create Date: 2025-10-09 13:08:18.116737

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8b0f2ef2bda9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('boards',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('sort_order', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_boards'))
    )
    op.create_table('questions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('qtype', sa.Enum('single', 'multi', 'short', name='question_type'), nullable=False),
    sa.Column('stem', sa.Text(), nullable=False),
    sa.Column('choices', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('answer_key', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('rubric', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_questions'))
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_hash', sa.Text(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('first_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('email_verify_tokens',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token_hash', sa.String(length=128), nullable=False),
    sa.Column('issued_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('used_ip', sa.String(length=45), nullable=True),
    sa.Column('used_user_agent', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_email_verify_tokens_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email_verify_tokens')),
    sa.UniqueConstraint('token_hash', name='uq_email_verify_token_hash'),
    sa.UniqueConstraint('token_hash', name=op.f('uq_email_verify_tokens_token_hash'))
    )
    op.create_index(op.f('ix_email_verify_tokens_user_id'), 'email_verify_tokens', ['user_id'], unique=False)
    op.create_index('ix_evt_user_id_issued_at', 'email_verify_tokens', ['user_id', 'issued_at'], unique=False)
    op.create_table('modules',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('board_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('sort_order', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], name=op.f('fk_modules_board_id_boards'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_modules'))
    )
    op.create_index(op.f('ix_modules_board_id'), 'modules', ['board_id'], unique=False)
    op.create_table('oauth_accounts',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('provider_account_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_oauth_accounts_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_oauth_accounts')),
    sa.UniqueConstraint('provider', 'provider_account_id', name='uq_oauth_provider_account')
    )
    op.create_index(op.f('ix_oauth_accounts_user_id'), 'oauth_accounts', ['user_id'], unique=False)
    op.create_table('onboarding_surveys',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('total_score', sa.Integer(), nullable=True),
    sa.Column('level', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_onboarding_surveys_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_onboarding_surveys')),
    sa.UniqueConstraint('user_id', name='uq_onboarding_survey_user')
    )
    op.create_index(op.f('ix_onboarding_surveys_user_id'), 'onboarding_surveys', ['user_id'], unique=False)
    op.create_table('password_reset_tokens',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_password_reset_tokens_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_password_reset_tokens')),
    sa.UniqueConstraint('token', name=op.f('uq_password_reset_tokens_token'))
    )
    op.create_index(op.f('ix_password_reset_tokens_user_id'), 'password_reset_tokens', ['user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('family_id', sa.Uuid(), nullable=False),
    sa.Column('refresh_token_hash', sa.String(length=128), nullable=False),
    sa.Column('issued_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('replaced_by_id', sa.Uuid(), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['replaced_by_id'], ['user_sessions.id'], name=op.f('fk_user_sessions_replaced_by_id_user_sessions'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_sessions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_sessions')),
    sa.UniqueConstraint('jti', name=op.f('uq_user_sessions_jti')),
    sa.UniqueConstraint('refresh_token_hash', name=op.f('uq_user_sessions_refresh_token_hash'))
    )
    op.create_index(op.f('ix_user_sessions_family_id'), 'user_sessions', ['family_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_table('onboarding_survey_answers',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('survey_id', sa.UUID(), nullable=False),
    sa.Column('question_number', sa.Integer(), nullable=False),
    sa.Column('question_key', sa.String(), nullable=False),
    sa.Column('question_type', sa.String(), nullable=False),
    sa.Column('answer_value', sa.Text(), nullable=True),
    sa.Column('answer_text', sa.Text(), nullable=True),
    sa.Column('answer_score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.CheckConstraint("question_type in ('single_choice','multi_choice','text')", name=op.f('ck_onboarding_survey_answers_ck_question_type')),
    sa.ForeignKeyConstraint(['survey_id'], ['onboarding_surveys.id'], name=op.f('fk_onboarding_survey_answers_survey_id_onboarding_surveys'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_onboarding_survey_answers')),
    sa.UniqueConstraint('survey_id', 'question_key', name='uq_survey_question_key')
    )
    op.create_index(op.f('ix_onboarding_survey_answers_survey_id'), 'onboarding_survey_answers', ['survey_id'], unique=False)
    op.create_table('topics',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('module_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('pass_threshold', sa.Numeric(precision=3, scale=2), server_default=sa.text('0.80'), nullable=False),
    sa.Column('sort_order', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], name=op.f('fk_topics_module_id_modules'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_topics'))
    )
    op.create_index(op.f('ix_topics_module_id'), 'topics', ['module_id'], unique=False)
    op.create_table('assessment_sessions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('kind', sa.Enum('global', 'topic_quiz', name='assessment_kind'), nullable=False),
    sa.Column('topic_id', sa.UUID(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_score', sa.Numeric(), nullable=True),
    sa.Column('ai_summary', sa.Text(), nullable=True),
    sa.Column('ai_recommendation', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_question_index', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], name=op.f('fk_assessment_sessions_topic_id_topics')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_assessment_sessions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_assessment_sessions'))
    )
    op.create_index(op.f('ix_assessment_sessions_user_id'), 'assessment_sessions', ['user_id'], unique=False)
    op.create_table('chat_sessions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('scope', sa.Enum('global', 'topic', name='chat_scope'), nullable=False),
    sa.Column('topic_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('message_count', sa.Integer(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('summary_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('summarized_upto_message_id', sa.UUID(), nullable=True),
    sa.Column('last_active_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], name=op.f('fk_chat_sessions_topic_id_topics')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_chat_sessions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_chat_sessions')),
    sa.UniqueConstraint('user_id', 'topic_id', name='ux_topic_chat_once')
    )
    op.create_index('idx_sessions_user_last_active', 'chat_sessions', ['user_id', 'last_active_at'], unique=False, postgresql_using='btree')
    op.create_index(op.f('ix_chat_sessions_user_id'), 'chat_sessions', ['user_id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('topic_id', sa.UUID(), nullable=True),
    sa.Column('document_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], name=op.f('fk_documents_topic_id_topics')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_documents'))
    )
    op.create_table('onboarding_survey_options',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('answer_id', sa.UUID(), nullable=False),
    sa.Column('option_value', sa.String(), nullable=False),
    sa.Column('option_text', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['onboarding_survey_answers.id'], name=op.f('fk_onboarding_survey_options_answer_id_onboarding_survey_answers'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_onboarding_survey_options'))
    )
    op.create_index(op.f('ix_onboarding_survey_options_answer_id'), 'onboarding_survey_options', ['answer_id'], unique=False)
    op.create_table('question_topics',
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('topic_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], name=op.f('fk_question_topics_question_id_questions'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], name=op.f('fk_question_topics_topic_id_topics'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('question_id', 'topic_id', name='pk_question_topics')
    )
    op.create_table('topic_contents',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('topic_id', sa.UUID(), nullable=False),
    sa.Column('body_format', sa.String(), server_default=sa.text("'markdown'"), nullable=False),
    sa.Column('body_markdown', sa.Text(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('resources', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], name=op.f('fk_topic_contents_topic_id_topics'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_topic_contents'))
    )
    op.create_index(op.f('ix_topic_contents_topic_id'), 'topic_contents', ['topic_id'], unique=True)
    op.create_table('assessment_items',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('order_no', sa.Integer(), nullable=False),
    sa.Column('question_snapshot', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['assessment_sessions.id'], name=op.f('fk_assessment_items_session_id_assessment_sessions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_assessment_items'))
    )
    op.create_index(op.f('ix_assessment_items_session_id'), 'assessment_items', ['session_id'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('user', 'ai', name='role'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], name=op.f('fk_chat_messages_session_id_chat_sessions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_chat_messages'))
    )
    op.create_index(op.f('ix_chat_messages_session_id'), 'chat_messages', ['session_id'], unique=False)
    op.create_table('document_chunks',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name=op.f('fk_document_chunks_document_id_documents'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_document_chunks'))
    )
    op.create_index(op.f('ix_document_chunks_document_id'), 'document_chunks', ['document_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_document_chunks_document_id'), table_name='document_chunks')
    op.drop_table('document_chunks')
    op.drop_index(op.f('ix_chat_messages_session_id'), table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index(op.f('ix_assessment_items_session_id'), table_name='assessment_items')
    op.drop_table('assessment_items')
    op.drop_index(op.f('ix_topic_contents_topic_id'), table_name='topic_contents')
    op.drop_table('topic_contents')
    op.drop_table('question_topics')
    op.drop_index(op.f('ix_onboarding_survey_options_answer_id'), table_name='onboarding_survey_options')
    op.drop_table('onboarding_survey_options')
    op.drop_table('documents')
    op.drop_index(op.f('ix_chat_sessions_user_id'), table_name='chat_sessions')
    op.drop_index('idx_sessions_user_last_active', table_name='chat_sessions', postgresql_using='btree')
    op.drop_table('chat_sessions')
    op.drop_index(op.f('ix_assessment_sessions_user_id'), table_name='assessment_sessions')
    op.drop_table('assessment_sessions')
    op.drop_index(op.f('ix_topics_module_id'), table_name='topics')
    op.drop_table('topics')
    op.drop_index(op.f('ix_onboarding_survey_answers_survey_id'), table_name='onboarding_survey_answers')
    op.drop_table('onboarding_survey_answers')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_family_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_password_reset_tokens_user_id'), table_name='password_reset_tokens')
    op.drop_table('password_reset_tokens')
    op.drop_index(op.f('ix_onboarding_surveys_user_id'), table_name='onboarding_surveys')
    op.drop_table('onboarding_surveys')
    op.drop_index(op.f('ix_oauth_accounts_user_id'), table_name='oauth_accounts')
    op.drop_table('oauth_accounts')
    op.drop_index(op.f('ix_modules_board_id'), table_name='modules')
    op.drop_table('modules')
    op.drop_index('ix_evt_user_id_issued_at', table_name='email_verify_tokens')
    op.drop_index(op.f('ix_email_verify_tokens_user_id'), table_name='email_verify_tokens')
    op.drop_table('email_verify_tokens')
    op.drop_table('users')
    op.drop_table('questions')
    op.drop_table('boards')
    # ### end Alembic commands ###
